<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.valueservice.djs.db.dao.chat.RoomUserDOMapper">
  <resultMap id="BaseResultMap" type="com.valueservice.djs.db.entity.chat.RoomUserDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="active" jdbcType="INTEGER" property="active" />
  </resultMap>
  <sql id="Base_Column_List">
    id, room_id, user_id, pay_type, create_time, active
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_b_room_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_b_room_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.valueservice.djs.db.entity.chat.RoomUserDO">
    insert into t_b_room_user (id, room_id, user_id, 
      pay_type, create_time, active
      )
    values (#{id,jdbcType=INTEGER}, #{roomId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{payType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{active,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.valueservice.djs.db.entity.chat.RoomUserDO">
    insert into t_b_room_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="active != null">
        active,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="active != null">
        #{active,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.valueservice.djs.db.entity.chat.RoomUserDO">
    update t_b_room_user
    <set>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.valueservice.djs.db.entity.chat.RoomUserDO">
    update t_b_room_user
    set room_id = #{roomId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      active = #{active,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.valueservice.djs.db.dao.lecturer.LecturerInviteDOMapper">
  <resultMap id="BaseResultMap" type="com.valueservice.djs.db.entity.lecturer.LecturerInviteDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="lecturer_name" jdbcType="VARCHAR" property="lecturerName" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="grade_id" jdbcType="INTEGER" property="gradeId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="invite_code" jdbcType="VARCHAR" property="inviteCode" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, lecturer_name, company, position, grade_id, phone, invite_code, status, create_user_id, 
    create_time, update_time
  </sql>
  
  <select id="selectByInviteCode" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_b_lecturer_invite
    where invite_code = #{inviteCode} and status = 'notallow'
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_b_lecturer_invite
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_b_lecturer_invite
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.valueservice.djs.db.entity.lecturer.LecturerInviteDO">
    insert into t_b_lecturer_invite (id, lecturer_name, company, 
      position, grade_id, phone, 
      invite_code, status, create_user_id, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{lecturerName,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{position,jdbcType=VARCHAR}, #{gradeId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{inviteCode,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.valueservice.djs.db.entity.lecturer.LecturerInviteDO">
    insert into t_b_lecturer_invite
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="lecturerName != null">
        lecturer_name,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="inviteCode != null">
        invite_code,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="lecturerName != null">
        #{lecturerName,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="inviteCode != null">
        #{inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.valueservice.djs.db.entity.lecturer.LecturerInviteDO">
    update t_b_lecturer_invite
    <set>
      <if test="lecturerName != null">
        lecturer_name = #{lecturerName,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="inviteCode != null">
        invite_code = #{inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.valueservice.djs.db.entity.lecturer.LecturerInviteDO">
    update t_b_lecturer_invite
    set lecturer_name = #{lecturerName,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      grade_id = #{gradeId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      invite_code = #{inviteCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>